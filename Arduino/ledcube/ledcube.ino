int led[] = {3,4,5,6,7,8,9,10,11};
int layer[] = {12,13,2};
int cycletime = 200;

// template
int TEMP_LED[] = {
  0x000, 0x000, 0x000}; // 左からトップ層ミドル層ボトム層

int ANIM_1_TOP[] = {
  0x000,0x1FF,0x000,0x000,0x1FF,0x000,0x000,0x1D9,0x000,0x000,
  0x000,0x124,0x010,0x092,0x1FF,0x092,0x1FF,0x092,0x000,0x092,
  0x000,0x000,0x092,0x000,0x000,0x092,0x000,0x000,0x000,0x000

};
int ANIM_1_MID[] = {
  0x000,0x1FF,0x000,0x000,0x1FF,0x000,0x001,0x001,0x000,0x000,
  0x100,0x000,0x000,0x001,0x000,0x000,0x000,0x000,0x100,0x000,
  0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000

};
int ANIM_1_BOT[] = {
  0x000,0x000,0x1FF,0x1FF,0x000,0x001,0x001,0x001,0x000,0x000,
  0x000,0x100,0x000,0x000,0x001,0x000,0x000,0x000,0x000,0x100,
  0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000
};

int ANIM_2_TOP[] = {
  0x1FF,0x124,0x092,0x049,0x000,0x049,0x054,0x038,0x111,0x092,
  0x145,0x010,0x0AA,0x010,0x080,0x100,0x020,0x004,0x001,0x100,
  0x040,0x004,0x000,0x000,0x000,0x054,0x1FF,0x010,0x000,0x000
 
};
int ANIM_2_MID[] = {
  0x000,0x092,0x092,0x092,0x000,0x049,0x054,0x038,0x111,0x092,
  0x010,0x145,0x010,0x0AA,0x010,0x010,0x010,0x010,0x001,0x100,
  0x040,0x004,0x000,0x000,0x054,0x000,0x1FF,0x145,0x0AA,0x000
};
int ANIM_2_BOT[] = {
  0x000,0x049,0x092,0x124,0x1ff,0x049,0x054,0x038,0x111,0x092,
  0x145,0x010,0x0aa,0x010,0x002,0x001,0x008,0x040,0x001,0x100,
  0x040,0x004,0x000,0x054,0x000,0x000,0x1ff,0x010,0x000,0x145
};

//全消灯関数　sizeof()はarray.length
void AllOFF(){
    for(int i=0; i < (sizeof(led)/sizeof(int)); i++){  
    digitalWrite(led[i], LOW);
  }
  for(int i = 0; i < (sizeof(layer) / sizeof(int)); i++){
    digitalWrite(layer[i], HIGH);
  }
}

void DynaDrive(int pat[]){
//1msで上下のレイヤーを点灯消灯　配列の先頭のポインタが与えられる
  for(int n = 0; n < cycletime / 3; n++){
    for(int L = 0; L < (sizeof(layer) / sizeof(int)); L++){
      for(int temp = 0; temp < (sizeof(led) / sizeof(int)); temp++){
        if(bitRead(pat[L], temp) == B01){
          digitalWrite(led[temp], HIGH);
        }
        else{
          digitalWrite(led[temp], LOW);
        }
      }
      digitalWrite(layer[L], LOW);
      delayMicroseconds(500);
      digitalWrite(layer[L], HIGH);
      delayMicroseconds(500);
    }
  }
}


void setup(){
  for(int i = 0; i < (sizeof(led) / sizeof(int)); i++){
    pinMode(led[i], OUTPUT);
  }
  for(int i =0; i < (sizeof(layer) / sizeof(int)); i++){
    pinMode(layer[i], OUTPUT);
  }
  AllOFF();
}


void loop(){
  for(int n = 0; n < (sizeof(ANIM_1_TOP) / sizeof(int)); n++){
    TEMP_LED[0] = ANIM_1_TOP[n];
    TEMP_LED[1] = ANIM_1_MID[n];
    TEMP_LED[2] = ANIM_1_BOT[n];
    DynaDrive(TEMP_LED);
    AllOFF();
  }
  for(int n = 0; n < (sizeof(ANIM_2_TOP) / sizeof(int)); n++){
    TEMP_LED[0] = ANIM_2_TOP[n];
    TEMP_LED[1] = ANIM_2_MID[n];
    TEMP_LED[2] = ANIM_2_BOT[n];
    DynaDrive(TEMP_LED);
    AllOFF();
  }
}


      


